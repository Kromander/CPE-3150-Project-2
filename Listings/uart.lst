C51 COMPILER V9.54   UART                                                                  05/07/2017 13:48:13 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart
                    -.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /***********************************************************************
   2          MODULE:    UART
   3          VERSION:   1.04
   4          CONTAINS:  Routines for controlling the UART peripheral on the Philips
   5                     P89LPC932A1
   6          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   7          LICENSE:   May be freely used in commercial and non-commercial code
   8                     without royalties provided this copyright notice remains
   9                     in this file and unaltered
  10          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  11                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  12                     TO CHANGE THE CONTENTS OF THIS FILE
  13          GENERATED: On "May 11 2011" at "18:32:24" by Code Architect 2.06
  14          ***********************************************************************/
  15          
  16          // SFR description needs to be included
  17          #include <reg932.h>
  18          #include "uart.h"
  19          
  20          // flag that indicates if the UART is busy transmitting or not
  21          static bit mtxbusy;
  22          
  23          //set the green led
  24          sbit gLED = P2^7;
  25          
  26          /***********************************************************************
  27          DESC:    Initializes UART for mode 1
  28                   Baudrate: 9600
  29          RETURNS: Nothing
  30          CAUTION: If interrupts are being used then EA must be set to 1
  31                   after calling this function
  32          ************************************************************************/
  33          void uart_init
  34            (
  35            void
  36            )
  37          {
  38   1        // configure UART
  39   1        // clear SMOD0
  40   1        PCON &= ~0x40;
  41   1        SCON = 0x50;
  42   1        // set or clear SMOD1
  43   1        PCON &= 0x7F;
  44   1        PCON |= (0 << 8);
  45   1        SSTAT = 0x00;
  46   1      
  47   1        // enable break detect
  48   1        AUXR1 |= 0x40;
  49   1      
  50   1        // configure baud rate generator
  51   1        BRGCON = 0x00;
  52   1        BRGR0 = 0xF0;
  53   1        BRGR1 = 0x02;
  54   1        BRGCON = 0x03;
C51 COMPILER V9.54   UART                                                                  05/07/2017 13:48:13 PAGE 2   

  55   1      
  56   1        // TxD = push-pull, RxD = input
  57   1        P1M1 = 0x02;
  58   1        P1M2 = 0x01;
  59   1      
  60   1        // initially not busy
  61   1        mtxbusy = 0;
  62   1      
  63   1        // set isr priority to 0
  64   1        IP0 = 1;
  65   1        IP0H = 1;
  66   1        
  67   1        // enable uart interrupt
  68   1        ES = 1;
  69   1        EA = 1;
  70   1      
  71   1      
  72   1      } // uart_init
  73          
  74          /***********************************************************************
  75          DESC:    UART Interrupt Service Routine
  76          RETURNS: Nothing
  77          CAUTION: uart_init must be called first
  78                   EA must be set to 1
  79          ************************************************************************/
  80          void uart_isr(void) interrupt 4 using 1
  81          {
  82   1        if (RI)
  83   1        {
  84   2          // PUT CODE THAT EXECUTES WHEN RECEIVING A BYTE HERE
  85   2        gLED = ~gLED;
  86   2           
  87   2          // clear interrupt flag
  88   2          RI = 0;
  89   2        } // if
  90   1      
  91   1        if (TI)
  92   1        {
  93   2          // clear interrupt flag
  94   2          TI = 0;
  95   2          // no longer busy
  96   2          mtxbusy = 0;
  97   2        } // if
  98   1      
  99   1      } // uart_isr
 100          
 101          /***********************************************************************
 102          DESC:    Transmits a 8-bit value via the UART in the current mode
 103                   May result in a transmit interrupt if enabled.
 104          RETURNS: Nothing
 105          CAUTION: uart_init must be called first
 106          ************************************************************************/
 107          void uart_transmit(char c)
 108          {
 109   1        while(mtxbusy);
 110   1        mtxbusy = 1;
 111   1        SBUF = c;
 112   1      } // uart_transmit
 113          
 114          /***********************************************************************
 115          DESC:    Gets a received 8-bit value from the UART
 116          RETURNS: Received data
C51 COMPILER V9.54   UART                                                                  05/07/2017 13:48:13 PAGE 3   

 117          CAUTION: uart_init must be called first
 118          ************************************************************************/
 119          unsigned char uart_get
 120            (
 121            void
 122            )
 123          {
 124   1        return SBUF;
 125   1      } // uart_get


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     71    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
